{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fengy\\\\Desktop\\\\coding\\\\React_JS\\\\kinngshop\\\\src\\\\components\\\\directory\\\\directory.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors';\nimport MenuItem from '../menu-item/menu-item.component';\nimport { DirectoryMenuContainer } from './directory.styles'; //directory needs to store state value of menu items which use to pass and create menu item component\n\nconst Directory = ({\n  sections\n}) => /*#__PURE__*/React.createElement(DirectoryMenuContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, sections.map(({\n  id,\n  ...otherSectionProps\n}) => /*#__PURE__*/React.createElement(MenuItem, Object.assign({\n  key: id\n}, otherSectionProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n})) //{title, imageUrl, id, size, linkUrl} => othersectionprops will take care of the duplicate name props in the callingout function\n//those value in the function will be called automatically through the data\n));\n\nconst mapStateToProps = createStructuredSelector({\n  sections: selectDirectorySections\n});\nexport default connect(mapStateToProps)(Directory);","map":{"version":3,"sources":["C:/Users/fengy/Desktop/coding/React_JS/kinngshop/src/components/directory/directory.component.jsx"],"names":["React","connect","createStructuredSelector","selectDirectorySections","MenuItem","DirectoryMenuContainer","Directory","sections","map","id","otherSectionProps","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,uBAAT,QAAwC,2CAAxC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,sBAAT,QAAuC,oBAAvC,C,CACA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAChB,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIA,QAAQ,CAACC,GAAT,CAAc,CAAC;AAACC,EAAAA,EAAD;AAAK,KAAGC;AAAR,CAAD,kBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAED;AAAf,GAAuBC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADY,CAEZ;AACA;AAHF,CAFJ,CADF;;AAYA,MAAMC,eAAe,GAAGT,wBAAwB,CAAC;AAC/CK,EAAAA,QAAQ,EAAEJ;AADqC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAACU,eAAD,CAAP,CAAyBL,SAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors'\r\n\r\nimport MenuItem from '../menu-item/menu-item.component';\r\nimport { DirectoryMenuContainer } from './directory.styles'\r\n//directory needs to store state value of menu items which use to pass and create menu item component\r\nconst Directory = ({ sections }) => (\r\n  <DirectoryMenuContainer>\r\n    {\r\n      sections.map( ({id, ...otherSectionProps}) => (\r\n        <MenuItem key={id} {...otherSectionProps} />\r\n        //{title, imageUrl, id, size, linkUrl} => othersectionprops will take care of the duplicate name props in the callingout function\r\n        //those value in the function will be called automatically through the data\r\n        ))\r\n    }\r\n  </DirectoryMenuContainer>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  sections: selectDirectorySections\r\n})\r\n\r\nexport default connect(mapStateToProps)(Directory);"]},"metadata":{},"sourceType":"module"}