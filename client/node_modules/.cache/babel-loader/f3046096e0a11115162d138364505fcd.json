{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fengy\\\\Desktop\\\\coding\\\\React_JS\\\\kinngshop\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // redirect is used to direct the user if they are log in\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from '../src/pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport './App.css';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n      addCollectionAndDocuments('collections', collectionsArray.map(({\n        title,\n        items\n      }) => ({\n        title,\n        items\n      })));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 73\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 96\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // get user from redux state for redirecting\n// from user reducer gets currentUser info\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // dispatch: for redux to know that whatever you passing me is\n// going to be an action object that I'm going to pass to every reducer\n// user action is a function that gets user but returns an action object\n// invoking setCurrentUser with the user that will then be used as the payload \n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // app.js doesnt need any state from reducer: null #1\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/fengy/Desktop/coding/React_JS/kinngshop/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","CheckoutPage","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","addCollectionAndDocuments","collectionsArray","map","title","items","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n// redirect is used to direct the user if they are log in\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from '../src/pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth,createUserProfileDocument } from './firebase/firebase.utils';\nimport './App.css';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors'\n\nimport CheckoutPage from './pages/checkout/checkout.component'\n\n\nclass App extends React.Component{\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id:snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n    setCurrentUser(userAuth);\n    addCollectionAndDocuments('collections', collectionsArray.map(({title,items}) => ({title,items })))\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />): (<SignInAndSignUpPage />)} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n// get user from redux state for redirecting\n// from user reducer gets currentUser info\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\n// dispatch: for redux to know that whatever you passing me is\n// going to be an action object that I'm going to pass to every reducer\n// user action is a function that gets user but returns an action object\n// invoking setCurrentUser with the user that will then be used as the payload \nconst mapDispatchToProps = dispatch =>({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\n// app.js doesnt need any state from reducer: null #1\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}